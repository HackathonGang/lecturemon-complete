{"version":3,"sources":["context/user/index.tsx","components/auth/protectedRoute/index.tsx","views/auth/register/index.tsx","context/xp/index.tsx","views/auth/login/index.tsx","components/progress/index.tsx","components/layout/bpoke.png","components/layout/index.tsx","views/home/index.tsx","views/landing/index.tsx","components/trading_cards/index.tsx","views/profile/index.tsx","components/forms/index.tsx","views/polls/index.tsx","views/leaderboard/index.tsx","views/module/index.tsx","views/lecturer/index.tsx","App.tsx","index.tsx"],"names":["UserContext","React","createContext","user","logged","setUser","UserProvider","Provider","ProtectedRoute","children","params","useContext","useEffect","axios","get","then","data","name","id","catch","err","render","location","to","pathname","Register","useForm","register","handleSubmit","errors","watch","setError","hist","useHistory","onSubmit","a","console","log","post","alert","push","response","forEach","ob","errorField","message","error","className","htmlFor","type","ref","required","password","conf_password","validate","value","uni","uniemail","useremail","XpContext","xp","current","max","quantifier","level","setXp","XpProvider","Login","ret","Progress","quantity","showWidth","Math","floor","showXp","style","height","width","Layout","pageName","document","title","nextLevel","Navbar","aria-controls","aria-expanded","xmlns","fill","viewBox","stroke","aria-hidden","strokeLinecap","strokeLinejoin","strokeWidth","d","src","ball","alt","exact","activeClassName","onClick","Home","useState","modules","setModules","surveys","setSurveys","map","td","survey_id","survey_type","survey_name","length","module","module_id","module_code","module_name","lecturer_id","module_lecturer","Landing","TradingCard","imgURL","rarity","stats","text_color","rarity_color","bg_color","color","backgroundColor","stat","Profile","cards","setCards","card","TextInput","question","placeholder","reff","triggerValidation","RadioInput","options","radio","key","onChange","SelectInput","option","SliderInput","min","step","startText","endText","defaultValue","Polls","trigger","maxQ","setMaxQ","pid","useParams","pollData","setPollData","questions","setQuestions","questionsToAdd","toAdd","target_type","survey_title","description","answ","i","postData","target","answers","setTimeout","q","ind","Leaderboard","leaderboard","setLeaderboard","lb","Module","setModule","values","coursework_score","enjoyability_score","difficulty_score","lecture_satisfaction","Lecturer","lecturer","setLecturer","lecturer_name","friendliness_score","speed_of_response","module_list","App","undefined","path","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8e295bc8.chunk.js","sourcesContent":["import React from 'react'\nimport { IUser } from '../../interfaces'\n\ntype ContextProps = {\n    user: IUser,\n    setUser: (user: IUser) => void\n}\n\nconst UserContext = React.createContext<ContextProps>({user: { logged: false }, setUser: () => {}});\n\nexport const UserProvider = UserContext.Provider;\n\nexport default UserContext","import axios from 'axios';\nimport { FC, useContext, useEffect } from 'react'\nimport { Redirect, Route, RouteProps } from 'react-router'\nimport UserContext from '../../../context/user'\n\n\nconst ProtectedRoute: FC<RouteProps> = ({children, ...params}) => {\n    \n    \n    const { user, setUser } = useContext(UserContext)!;\n    \n    \n    useEffect(() => {\n    \n        axios.get(\"/api/ping\").then(data => {\n          setUser({\n            logged: true,\n            name: data.data.name,\n            id: data.data.id\n          })\n    \n    \n    \n        }).catch(err => setUser({logged: false}))\n    \n      }, [setUser])\n    \n    return (\n\n        \n\n\n        <Route {...params} render={({ location }) => user.logged ? ( children ) : (\n            <Redirect to={{\n                pathname: \"/signin\",\n            }}/>\n        )}/>\n    );\n}\n\nexport default ProtectedRoute;","import axios from 'axios';\nimport { FC } from 'react'\nimport { useForm } from 'react-hook-form';\nimport { Link, useHistory } from 'react-router-dom';\n\ninterface IRegisterForm extends ISubmission{\n    conf_password: string\n}\n\ninterface ISubmission {\n    name: string\n    password: string\n    uni: string\n    uniemail: string\n    useremail: string\n}\n\ninterface IError {\n    error: string\n    errorField: string\n}\n\nconst Register: FC = () => {\n\n    const { register, handleSubmit, errors, watch, setError } = useForm<IRegisterForm>()\n\n    const hist = useHistory()\n\n    const onSubmit = async (data: ISubmission) => {\n        console.log(data)\n        axios.post(\"/api/signup\", data).then(data => {\n            console.log(data);\n            alert(\"Please log in\")\n            hist.push(\"/signin\")\n        }).catch(err => {\n            console.log(err.response.data)\n\n            err.response.data.forEach((ob: IError) => {\n                switch (ob.errorField){\n                    case \"uniemail\":\n                        setError('uniemail', { message: ob.error })\n                        break\n                    \n                    case \"name\":\n                        setError('name', { message: ob.error })    \n                        break\n\n                    case \"password\":\n                        setError('password', { message: ob.error })\n                }\n\n            })\n        })\n    }\n\n\n    return (\n        <>\n            <div className=\"relative bg-white overflow-hidden h-screen\">\n                <div className=\"max-w-7xl mx-auto h-full flex items-center justify-center\">\n                \n                    <div className=\"shadow border-md p-4 text-center flex flex-col w-1/3\">\n                        <h2 className=\"mb-3 text-lg\">Sign-up</h2>\n                        <small className=\"underline hover:text-gray-500\"><Link to=\"/signin\">Sign-in?</Link></small>\n\n                        <form className=\"w-full flex flex-col\" onSubmit={handleSubmit(onSubmit)}>\n\n                            <label className=\"text-left\" htmlFor=\"name\">Name</label>\n                            <input className={`input ${errors.name ? \"input-error\" : \"\"}`} type=\"text\" name=\"name\" id=\"name\" ref={register({ required: true })}/>\n                            {\n                                errors.name?.type === \"required\" &&\n                                <small className=\"text-left text-red-500\">Please enter your name!</small>\n                            }\n                            {\n                                errors.name &&\n                                <small className=\"text-left text-red-500\">{ errors.name.message }</small>\n                            }\n\n                            <label className=\"text-left mt-3\" htmlFor=\"password\">Password</label>\n                            <input className={`input ${errors.password ? \"input-error\" : \"\"}`} type=\"password\" name=\"password\" id=\"password\" ref={register({ required: true })}/>\n                            {\n                                errors.password?.type === \"required\" &&\n                                <small className=\"text-left text-red-500\">Please enter a password</small>\n                            }\n                                                        {\n                                errors.password &&\n                                <small className=\"text-left text-red-500\">{ errors.password.message }</small>\n                            }\n\n                            <label className=\"text-left mt-3\" htmlFor=\"password\">Confirm Password</label>\n                            <input className={`input ${errors.conf_password ? \"input-error\" : \"\"}`} type=\"password\" name=\"conf_password\" id=\"conf_password\" ref={register({ required: true, validate: value => value === watch(\"password\", \"\") || \"The passwords don't match!\" })}/>\n                            {\n                                errors.conf_password &&\n                                <small className=\"text-left text-red-500\">{errors.conf_password.message}</small>\n                            }\n\n\n                            <label className=\"text-left mt-3\" htmlFor=\"uni\">University</label>\n                            <select className={`select ${errors.uni ? \"select-error\" : \"\"}`} name=\"uni\" id=\"uni\" ref={register({required: true, validate: value => value !== \"null\" || \"Please choose a university!\"})}>\n                                <option value=\"null\">Please select your University</option>\n                                <option value=\"warwick\">University of Warwick</option>\n                                <option value=\"durham\">Durham University</option>\n                            </select>\n                            {\n                                errors.uni &&\n                                <small className=\"text-left text-red-500\">{ errors.uni.message }</small>\n                            }\n\n\n                            <label className=\"text-left mt-3\" htmlFor=\"uni_email\">University Email</label>\n                            <input className={`input ${errors.uniemail ? \"input-error\" : \"\"}`} type=\"email\" name=\"uniemail\" id=\"uniemail\" ref={register({ required: true })}/>\n                            {\n                                errors.uniemail?.type === \"required\" &&\n                                <small className=\"text-left text-red-500\">Please enter an email!</small>\n                            }\n                                                        {\n                                errors.uniemail &&\n                                <small className=\"text-left text-red-500\">{ errors.uniemail.message }</small>\n                            }\n\n                            <label className=\"text-left mt-3\" htmlFor=\"useremail\">Personal Email</label>\n                            <input className={`input ${errors.useremail ? \"input-error\" : \"\"}`} type=\"email\" name=\"useremail\" id=\"useremail\" ref={register({ required: true })}/>\n                            {\n                                errors.useremail?.type === \"required\" &&\n                                <small className=\"text-left text-red-500\">Please enter an email!</small>\n                            }\n\n\n                            <span className=\"my-2\" />\n\n                            <button type=\"submit\" className=\"btn\">Sign-up</button>\n                        </form>\n                        \n\n                        \n                     \n\n\n\n                    </div>\n                \n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Register;","import React from 'react'\nimport { IXp } from '../../interfaces'\n\ntype XpContextProps = {\n    xp: IXp,\n    setXp: (xp: IXp) => void\n}\n\nconst XpContext = React.createContext<XpContextProps>({xp: {current: 0, max: 100, quantifier: \"xp\", level: 0}, setXp: () => {}});\n\nexport const XpProvider = XpContext.Provider;\n\nexport default XpContext","import axios, { AxiosResponse } from 'axios';\nimport { FC, useContext } from 'react'\nimport { useForm } from 'react-hook-form';\nimport { Link, useHistory } from 'react-router-dom';\nimport UserContext from '../../../context/user';\nimport XpContext from '../../../context/xp';\n\ninterface ILoginForm {\n    uniemail: string\n    password: string\n}\n\ninterface IError {\n    error: string\n    errorField: string\n}\n\ninterface IResp {\n    id: number\n    name: string\n    xp: number\n}\n\nconst Login: FC = () => {\n\n    const { register, handleSubmit, errors, setError } = useForm<ILoginForm>()\n\n    const {setUser} = useContext(UserContext)!;\n\n    const { xp, setXp } = useContext(XpContext)!;\n\n    const hist = useHistory()\n\n    const onSubmit = async (data: ILoginForm) => {\n        axios.post(\"/api/signin\", data).then((ret: AxiosResponse<IResp>) => {\n            setUser({\n                id: ret.data.id,\n                name: ret.data.name,\n                logged: true\n            })\n            setXp({\n                ...xp,\n                current: ret.data.xp\n              })\n\n            hist.push(\"/\")\n\n        }).catch(err => {\n            console.log(err.response.data)\n\n            err.response.data.forEach((ob: IError) => {\n                switch (ob.errorField){\n                    case \"uniemail\":\n                        setError('uniemail', { message: ob.error })\n                        break\n                    \n\n                    case \"password\":\n                        setError('password', { message: ob.error })\n                        break\n                }\n\n            })\n        })\n\n    }\n\n    return (\n        <>\n            <div className=\"relative bg-white overflow-hidden h-screen\">\n                <div className=\"max-w-7xl mx-auto h-full flex items-center justify-center\">\n                \n                    <div className=\"shadow border-md p-4 text-center flex flex-col w-1/3\">\n                        <h2 className=\"mb-3 text-lg\">Sign-in</h2>\n                        <small className=\"underline hover:text-gray-500\"><Link to=\"/signup\">Sign-up?</Link></small>\n\n                        <form className=\"w-full flex flex-col\" onSubmit={handleSubmit(onSubmit)}>\n                            <label className=\"text-left\" htmlFor=\"email\">University Email</label>\n                            <input className={`input ${errors.uniemail ? \"input-error\" : \"\"}`} type=\"text\" name=\"uniemail\" id=\"email\" ref={register({ required: true })}/>\n                            {\n                                errors.uniemail?.type === \"required\" &&\n                                <small className=\"text-left text-red-500\">Please enter your university email!</small>\n                            }\n                            {\n                                errors.uniemail &&\n                                <small className=\"text-left text-red-500\">{ errors.uniemail.message }</small>\n                            }\n\n                            <label className=\"text-left mt-3\" htmlFor=\"password\">Password</label>\n                            <input className={`input ${errors.password ? \"input-error\" : \"\"}`} type=\"password\" name=\"password\" id=\"password\" ref={register({ required: true })}/>\n                            {\n                                errors.password?.type === \"required\" &&\n                                <small className=\"text-left text-red-500\">Please enter your password!</small>\n                            }\n                            {\n                                errors.password &&\n                                <small className=\"text-left text-red-500\">{ errors.password.message }</small>\n                            }\n\n                            <span className=\"my-2\" />\n\n                            <button type=\"submit\" className=\"btn\">Sign-in</button>\n                        </form>\n                        \n\n                        \n                     \n\n\n\n                    </div>\n                \n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Login;","import { FC } from 'react'\n\n\ninterface IProgress {\n    current: number\n    max: number\n    quantity: string\n}\n\nconst Progress: FC<IProgress> = ({ current, max, quantity }) => {\n\n\n    max = 100\n\n    let level = Math.floor(current/100)\n\n    current = current - (level*100)\n\n\n    let showWidth = current/max*100+ \"%\"\n\n\n\n\n    let showXp = `${current}/${max} ${quantity}`\n\n    if (current > max) {\n        showWidth = \"100%\"\n        showXp = `${max}/${max} ${quantity}`\n    }\n\n\n    return (\n        <div className=\"shadow w-3/4 bg-grey-light\" style={{height: \"150%\"}}>\n            <div className=\"bg-green-500 text-xs leading-none py-2 text-center text-white z-10 transition-width duration-1000 whitespace-nowrap\" style={{width: showWidth}}>{ showXp }</div>\n        </div>\n    )\n}\n\nexport default Progress","export default __webpack_public_path__ + \"static/media/bpoke.fe0752eb.png\";","import axios from 'axios';\nimport React, { FC, useContext, useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport UserContext from '../../context/user'\nimport XpContext from '../../context/xp';\nimport Progress from '../progress'\nimport ball from \"./bpoke.png\"\n\ninterface ILayout {\n    pageName: string\n}\n\nconst Layout: FC<ILayout>  = ({ pageName, children }) => {\n\n\n    useEffect(() => {\n        document.title = `${pageName} | LectureMon`\n    })\n\n    const { user } = useContext(UserContext)!;\n    const { xp } = useContext(XpContext)!;\n\n    \n    let nextLevel = Math.floor(xp.current/100) + 1\n\n    let current = xp.current\n    let max = 100\n    let level = Math.floor(current/100)\n\n    current = current - (level*100)\n\n\n    let showWidth = current/max*100+ \"%\"\n\n\n    return (\n        <>\n            <Navbar />\n            <main>\n                <div className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n                    <h1 className=\"mt-20 text-4xl font-bold mb-2\">Hello, { user.name }</h1>\n                    <small>Progress to level { nextLevel }: {showWidth}</small>\n                    { xp.current !== 0 && <Progress current={xp.current} max={100} quantity={xp.quantifier} />}\n                    <span className=\"m-5\"></span>\n                    { children }\n                </div>\n            </main>\n        </>\n    )   \n}\n\nexport default Layout\n\n\n\n\nconst Navbar: FC = () => {\n\n\n    const { setUser } = useContext(UserContext)!;\n\n    const logout = () => {\n        axios.get(\"/api/logout\").then(data => {\n            setUser({ logged: false })\n        })\n    }\n\n\n    return (\n        <nav className=\"bg-white border border-gray-200\">\n            <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\n                <div className=\"relative flex items-center justify-between h-16\">\n                    <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n\n                        <button type=\"button\" className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\" aria-controls=\"mobile-menu\" aria-expanded=\"false\">\n                        <span className=\"sr-only\">Open main menu</span>\n\n                        <svg className=\"block h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16M4 18h16\" />\n                        </svg>\n\n                        <svg className=\"hidden h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                        </svg>\n                        </button>\n                    </div>\n\n                    <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n                        <div className=\"flex-shrink-0 flex items-center\">\n\n                            <img className=\"hidden lg:block h-7 w-auto\" src={ball} alt=\"Workflow\" />\n                        </div>\n                        <div className=\"hidden sm:block sm:ml-auto\">\n                            <div className=\"flex space-x-4\">\n                                <NavLink exact to=\"/\" activeClassName=\"border border-black\" className=\"text-gray-700 hover:bg-gray-400 hover:text-white px-3 py-2 rounded-md text-sm font-medium\">Dashboard</NavLink>\n                                <NavLink to=\"/leaderboard\" activeClassName=\"border border-black\" className=\"text-gray-700 hover:bg-gray-400 hover:text-white px-3 py-2 rounded-md text-sm font-medium\">Leaderboard</NavLink>\n                                <NavLink to=\"/profile\" activeClassName=\"border border-black\" className=\"text-gray-700 hover:bg-gray-400 hover:text-white px-3 py-2 rounded-md text-sm font-medium\">Profile</NavLink>\n                                <button onClick={() => logout()} className=\"text-gray-700 hover:bg-gray-400 hover:text-white px-3 py-2 rounded-md text-sm font-medium\">Logout</button>\n                            </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n\n        <div className=\"sm:hidden\" id=\"mobile-menu\">\n            <div className=\"px-2 pt-2 pb-3 space-y-1\">\n                <NavLink to=\"/\" className=\"bg-gray-900 text-white block px-3 py-2 rounded-md text-base font-medium\">Dashboard</NavLink>\n                <NavLink to=\"/leaderboard\" className=\"text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium\">Leaderboard</NavLink>\n                <NavLink to=\"/profile\" className=\"text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium\">Profile</NavLink>\n                <button  className=\"text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium\">Logout</button>\n            </div>\n        </div>\n        </nav>\n    )\n}","import axios from 'axios';\nimport { FC, useContext, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport Layout from '../../components/layout'\nimport UserContext from '../../context/user';\nimport { IModule, ISurvey } from '../../interfaces';\n\nconst Home: FC = () => {\n\n\n    const [modules, setModules] = useState<IModule[]>([]);\n    const [surveys, setSurveys] = useState<ISurvey[]>([]);\n\n    const { setUser } = useContext(UserContext)\n\n    useEffect(() => {\n      \n\n\n\n\n        axios.get(\"/api/modules\").then(data => {\n            console.log(data.data)\n\n            setModules(data.data)\n\n            \n\n        }).catch(err => setUser({logged: false}));\n\n        axios.get(\"/api/surveys\").then(data => {\n            console.log(data)\n\n            setSurveys(data.data)\n        })\n    \n\n\n    }, [setUser])\n\n    return (\n        <>\n            <Layout pageName=\"Dashboard\">\n\n                <div className=\"grid grid-flow-col grid-cols-2 gap-8\">\n                    <div>\n                        <h2 className=\"text-xl mb-2\">To do</h2>\n\n                        {\n                            surveys.map(td => {\n                                return (\n                                    <Link to={`/poll/${ td.survey_id }`} key={ td.survey_id } className=\"group shadow rounded-md h-auto overflow-hidden flex items-center mb-3 hover:bg-gray-200\">\n                                        <p className=\"uppercase border border-gray-200 border-l-0 border-t-0 border-b-0 h-full py-2 px-4 group-hover:border-white\">{ td.survey_type }</p>\n                                        <p className=\"py-2 px-4\">{ td.survey_name }</p>\n                                    </Link>\n                                )\n                            })\n                        }\n                                       \n                        {\n                            surveys.length === 0 &&\n                            <p>No surveys found!</p>\n                        }\n\n                    </div>\n                    \n                    <div>\n                        <h2 className=\"text-xl mb-2\">Modules</h2>\n                        {\n                            modules.map(module => {\n                                return (\n                                    <Link to={`/module/${ module.module_id }`} key={ module.module_id } className=\"group shadow rounded-md h-auto overflow-hidden flex items-center mb-3 hover:bg-gray-200\">\n                                        <p className=\"uppercase border border-gray-200 border-l-0 border-t-0 border-b-0 h-full py-6 px-4 group-hover:border-white\">{ module.module_code }</p>\n                                        <div className=\"py-2 px-4\">\n                                            <p className=\"\">{ module.module_name }</p>\n                                            \n                                            <Link to={`/lecturer/${module.lecturer_id}`}><small className=\"text-gray-500 text-xs\">{ module.module_lecturer }</small></Link>\n                                        </div>\n                                    </Link>\n                                )\n                            })\n                        }\n                        {\n                            modules.length === 0 &&\n                            <p>No modules found!</p>\n                        }\n                    </div>\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nexport default Home;","import { FC } from 'react'\nimport { Link } from 'react-router-dom';\n\nconst Landing: FC = () => {\n    return (\n        <>\n            <div className=\"relative bg-white overflow-hidden h-screen\">\n                <div className=\"max-w-7xl mx-auto h-full flex items-center justify-center\">\n                    \n                        <div className=\"text-center flex flex-col items-center\">\n                            <h1 className=\"text-9xl font-bold text-purple-500 pb-4\">LectureMon</h1>\n                            <p className=\"text-lg font-bold\">Because we are way better than you will ever be!</p>\n\n                            <div className=\"flex mt-8\">\n                                <Link to=\"/signup\" className=\"btn mr-5 btn-green\">Sign-up</Link>\n                                <Link to=\"/signin\" className=\"btn\">Sign-in</Link>\n                            </div>\n\n                        </div>\n                    \n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Landing;","\nimport { FC } from 'react'\n\n\ninterface IStat {\n    name: string\n    value: number\n}\n\ninterface ITradingCard {\n    name: string,\n    imgURL: string,\n    rarity?: string,\n    stats: IStat[]\n\n}\n\n\nconst TradingCard: FC<ITradingCard> = ({ name, imgURL, rarity, stats}) => {\n\n\n    let text_color: string = \"black\"\n    let rarity_color: string = \"black\"\n    let bg_color: string = \"bg-gradient-to-r from-green-300 to-green-800\"\n\n    switch (rarity) {\n        case \"common\":\n            text_color = \"white\"\n            rarity_color = \"white\"\n            bg_color = \"bg-gradient-to-r from-green-300 to-green-700\"\n            break\n\n        case \"rare\":\n            text_color = \"white\"\n            rarity_color = \"white\"\n            bg_color = \"bg-gradient-to-r from-blue-300 to-blue-700\"\n            break\n\n        case \"epic\":\n            text_color = \"white\"\n            rarity_color = \"black\"\n            bg_color = \"bg-gradient-to-r from-indigo-300 to-purple-700\"\n            break\n\n        case \"legendary\":\n            text_color = \"white\"\n            rarity_color = \"gold\"\n            bg_color = \"bg-gradient-to-r from-yellow-300 to-red-700\"\n            break\n\n        default:\n            break;\n\n    }\n\n    return (\n        <div className=\"flex flex-col justify-center items-center\">\n            <div className={`shadow rounded-md flex flex-col justify-center p-4 ${bg_color}`} style={{color: text_color}}>\n                <small className=\"uppercase text-center pb-2 font-bold\" style={{color: rarity_color}}>{ rarity }</small>\n                <img src={imgURL} alt=\"\" className=\"w-48 h-48 mb-2\"/>\n                <h1 className=\"text-lg text-center mb-1\">{ name }</h1>\n                <div className=\"text-left p-2 border border-gray-600\" style={{backgroundColor: \"rgba(0,0,0,0.15)\"}}>\n                    { stats.map(stat => {\n                        return (\n                            <p className=\"text-sm\">{ stat.name }: { stat.value }/5</p>\n                        )\n                    })}\n                </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default TradingCard","import axios from 'axios';\nimport { FC, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport Layout from '../../components/layout';\nimport TradingCard from '../../components/trading_cards';\n\ninterface ICard {\n    card_id: number\n    card_rarity: string\n    module_name: string\n    module_code: string\n    module_id: number\n}\n\nconst Profile: FC = () => {\n\n    const [cards, setCards] = useState<ICard[]>()\n\n    useEffect(() => {\n        axios.get(\"/api/getusercards\").then(data => {\n            console.log(data)\n\n            setCards(data.data)\n\n            \n\n        })\n\n\n    }, [setCards])\n\n\n    return (\n        <>\n            <Layout pageName=\"Profile\">\n                <p className=\"w-40 my-2 border-2 border-green-600 rounded-full py-2 px-4 text-center text-green-600\">✦ Course Rep</p>\n                <h2 className=\"mt-5 mb-2 text-3xl font-bold\">Inventory</h2>\n\n                <div className=\"grid grid-cols-4 gap-8\">\n                    {\n                        cards?.map(card => {\n                            return (\n                                <Link to={`/module/${card.module_id}`}>\n                                    <TradingCard name={card.module_code + \": \" + card.module_name} imgURL=\"https://pbs.twimg.com/media/C4MRT1NVUAAq0Hr.jpg\" stats={[]}></TradingCard>\n                                </Link>\n                            )\n                        })\n                    }\n                    \n                </div>\n            </Layout>\n        </>\n    )\n}\n\nexport default Profile;","import { FC } from 'react'\nimport { DeepMap, FieldError, FieldValues } from 'react-hook-form'\n\ninterface IInput {\n    question: string\n    reff: any\n    id: string\n    errors: DeepMap<FieldValues, FieldError>\n    triggerValidation: (payload?: string | string[]) => Promise<boolean>\n}\n\ninterface ITextInput extends IInput {\n    placeholder: string\n}\n\nexport const TextInput: FC<ITextInput> = ({ question, placeholder, reff, id, errors, triggerValidation }) => {\n    return (\n        <div className=\"flex flex-col mb-4\">\n            <label htmlFor={id} className=\"text-left\">{ question }</label>\n            <input ref={reff} type=\"text\" name={id} placeholder={placeholder} className={`input ${ errors[id] ? \"input-error\" : \"\" }`} />\n            {\n                errors[id] &&\n                <small className=\"text-left text-red-500\">Please fill in this field!</small>\n            }\n        </div>\n        \n    )\n}\n\ninterface IRadio {\n    name: string,\n    key: string\n}\n\ninterface IRadioInput extends IInput {\n    options: IRadio[]\n}\n\nexport const RadioInput: FC<IRadioInput> = ({ question, id, reff, options, errors, triggerValidation }) => {\n    return (\n    <div className=\"flex flex-col mb-4\">\n        <label htmlFor={id} className=\"text-left mb-1\">{ question }</label>\n        <div className=\"flex flex-row\">\n            { options.map(radio => {\n                return (\n                    <div key={radio.key} className=\"flex flex-row items-center justify-center mr-5\">\n                        <input className=\"mr-2\" ref={reff} type=\"radio\" id={radio.key} name={id} value={radio.key} onChange={() => triggerValidation()}/>\n                        <label htmlFor={radio.key}>{radio.name}</label>\n                    </div>\n                )\n            })}\n        </div>\n        {\n            errors[id] &&\n            <small className=\"text-left text-red-500\">Please choose an option!</small>\n        }\n    </div>\n    )\n}\n\n\ninterface ICheckbox {\n    name: string\n    id: string\n}\n\ninterface ICheckboxInput extends IInput {\n    options: ICheckbox[]\n}\nexport const CheckboxInput: FC<ICheckboxInput> = ({ question, id, reff, options }) => {\n    return (\n        <div className=\"flex flex-col mb-4\">\n            <p className=\"text-left\">{ question }</p>\n            <div className=\"flex flex-row\">\n                { options.map(check => {\n                    return (\n                        <div key={check.id + check.name} className=\"flex flex-row items-center justify-center mr-5\">\n                            <label htmlFor={ check.id } className=\"mr-2\">{ check.name }</label>\n                            <input ref={reff} type=\"checkbox\" name={check.id} id={check.id} />\n                        </div>\n                    )\n                })}\n            </div>\n            \n        </div>\n    )\n}\n\ninterface IOption {\n    name: string\n    key: string\n}\n\ninterface IOptionInput extends IInput {\n    options: IOption[]\n}\n\nexport const SelectInput: FC<IOptionInput> = ({ question, id, reff, options, errors, triggerValidation }) => {\n    return (\n        <div className=\"flex flex-col mb-4\">\n            <label className=\"text-left mt-3\" htmlFor={id}>{ question }</label>\n            <select ref={reff} className={`input ${ errors[id] ? \"input-error\" : \"\" }`} name={id} id={id} onChange={() => triggerValidation()}>\n                <option value=\"null\">Please select an option</option>\n                { options.map(option => {\n                    return (\n                        <option key={ option.key  } value={ option.key }>{ option.name }</option>\n                    )\n                })}\n            </select>\n            {\n                errors[id] &&\n                <small className=\"text-left text-red-500\">Please select an option!</small>\n            }\n        </div>\n    )\n}\n\ninterface ISlideInput extends IInput {\n    min: number\n    max: number\n    step: number\n    startText: string\n    endText: string\n}\n\nexport const SliderInput: FC<ISlideInput> = ({ question, id, reff, min, max, step, startText, endText }) => {\n    return (\n        <div className=\"flex flex-col mb-4\">\n            <label className=\"text-left mt-4 mb-2\" htmlFor={id}>{ question }</label>\n            <input ref={reff} type=\"range\" name={ id } id={id} min={min} max={max} step={step} defaultValue={3}/>\n            <div className=\"text-left w-full flex flex-row justify-between mt-2\">\n                <span className=\"text-gray-500 text-sm\">{ startText }</span>\n                <span className=\"text-gray-500 text-sm\">{ endText }</span>\n            </div>\n        </div>\n    )\n}","import axios from 'axios';\r\nimport { ReactNode, useContext, useEffect } from 'react';\r\nimport { FC, useState } from 'react'\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { RadioInput, TextInput, SelectInput, SliderInput } from '../../components/forms';\r\nimport Layout from '../../components/layout'\r\nimport XpContext from '../../context/xp';\r\n\r\ninterface IPollData {\r\n    survey_id: number\r\n    survey_title: string\r\n    description: string\r\n    target: number // Id\r\n    target_type: string // \"lecture\"/\"module\"\r\n}\r\n\r\ninterface IQuestion {\r\n    title: string\r\n    type: string\r\n    options: Array<any>\r\n}\r\n\r\ninterface IPostResult {\r\n    survey_id: number\r\n    target: number\r\n    target_type: string\r\n    answers: any[]\r\n}\r\n\r\nconst Polls: FC = () => {\r\n\r\n    const { register, handleSubmit, errors, trigger } = useForm();\r\n\r\n    const [maxQ, setMaxQ] = useState<number>(0);\r\n\r\n    const values = useParams<{id: string}>()\r\n\r\n    const pid = values.id;\r\n\r\n    const { xp, setXp } = useContext(XpContext)!;\r\n\r\n    const hist = useHistory()\r\n\r\n    const onSubmit = (data: any) => {\r\n\r\n        let answ: any[] = []\r\n\r\n        for (let i = 1; i <= maxQ; i++){\r\n            answ.push(data[\"\"+i])\r\n        }\r\n\r\n        let postData: IPostResult = {\r\n            survey_id: pollData?.survey_id || -1,\r\n            target: pollData?.target || -1,\r\n            target_type: pollData?.target_type || \"\",\r\n            answers: answ\r\n\r\n        }\r\n\r\n        console.log(postData)\r\n\r\n        axios.post(\"/api/surveyresponse\", pollData).then(data => {\r\n            console.log(data)\r\n\r\n            axios.get(\"/api/ping\").then(data => {\r\n\r\n          \r\n                setXp({\r\n                  ...xp,\r\n                  current: data.data.xp\r\n                })\r\n\r\n                setTimeout(() => {\r\n                    hist.push(\"/\")\r\n                }, 1005)\r\n          \r\n          \r\n          \r\n              })\r\n        })\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const [pollData, setPollData] = useState<IPollData>();\r\n\r\n    const [questions, setQuestions] = useState<ReactNode[]>([]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get(`/api/survey/${pid}`).then(data => {\r\n            console.log(data)\r\n\r\n            setPollData(data.data)\r\n\r\n            let questions: IQuestion[] = data.data.questions\r\n\r\n            \r\n        let id = 0;\r\n\r\n        let questionsToAdd: ReactNode[] = []\r\n\r\n        questions.forEach(question => {\r\n            id++;\r\n            let toAdd;\r\n\r\n            switch (question.type){\r\n                case \"text\":\r\n                    toAdd = <TextInput triggerValidation={trigger} errors={errors} reff={register({ required: true })} question={question.title} placeholder=\"Answer here\" id={\"\"+id}/>\r\n                    break;\r\n\r\n                case \"radio\":\r\n                    toAdd = <RadioInput triggerValidation={trigger} errors={errors} reff={register({ required: true })} question={question.title} id={\"\"+id} options={question.options} />\r\n                    break;\r\n\r\n                case \"select\":\r\n                    toAdd = <SelectInput triggerValidation={trigger} errors={errors} reff={register({ required: true, validate: value => value !== \"null\" || \"Please select an option\" })} question={question.title} id={\"\"+id} options={question.options} />\r\n                    break;\r\n\r\n                case \"slider\":\r\n                    toAdd = <SliderInput triggerValidation={trigger} errors={errors} reff={register({ required: true })} question={question.title} id={\"\"+id} min={1} max={5} step={1} startText={question.options[0] || \"\"} endText={question.options[1] || \"\"} />\r\n            }\r\n\r\n            \r\n\r\n            \r\n            questionsToAdd.push(toAdd)\r\n            \r\n        setMaxQ(id)\r\n\r\n        setQuestions(questionsToAdd)\r\n        })\r\n\r\n        })\r\n\r\n\r\n\r\n\r\n    }, [register, errors, trigger, pid])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Layout pageName=\"Dashboard\">\r\n\r\n                <h1 className=\"mt-2 mb-1 text-4xl font-bold capitalize\">[{ pollData?.target_type || \"No type\"}] { pollData?.survey_title || \"No Survey Title\" }</h1>\r\n                <small className=\"text-lg\">{ pollData?.description || \"No Description\" }</small>\r\n\r\n           \r\n                <div className=\"w-full mt-4 mx-auto h-full flex items-center justify-center\">\r\n                \r\n                    <div className=\"shadow border-md p-4 text-center flex flex-col w-11/12\">\r\n                        <h2 className=\"mb-3 text-lg\">Feedback Form</h2>\r\n                        <small className=\"underline hover:text-gray-500\"></small>\r\n\r\n                        <form className=\"w-full flex flex-col\" onSubmit={handleSubmit(onSubmit)} >\r\n\r\n                            { questions.map((q, ind) => {\r\n                                return (\r\n                                    <span key={ind}>\r\n                                    {q}\r\n                                    </span>\r\n                                )\r\n                            })}\r\n{/* \r\n                            <TextInput errors={errors} reff={register({ required: true })} question=\"Question 1\" placeholder=\"poo\" id=\"1\" />\r\n\r\n                            <RadioInput errors={errors} reff={register({ required: true })} question=\"Question 2\" id=\"radio-2\" options={[{name: \"Option 1\", key: \"opt1\"}, {name: \"Option 2\", key: \"opt2\"}, {name: \"Option 3\", key: \"opt3\"}]} />\r\n\r\n\r\n                            <SelectInput errors={errors} reff={register({ required: true, validate: value => value !== \"null\" || \"Please select an option\" })} question=\"Question 4\" id=\"select-1\" options={[{ name: \"Option 1\", key: \"opt1\"}, { name: \"Option 2\", key: \"opt2\"}]} />\r\n\r\n                            <SliderInput errors={errors} reff={register({ required: true })} question=\"Question 5\" id=\"slider-1\" min={1} max={5} step={1} startText=\"Disagree\" endText=\"Agree\" /> */}\r\n\r\n\r\n                            <button type=\"submit\" className=\"btn\">Submit Feedback</button>\r\n                        </form>\r\n    \r\n                    </div>\r\n                \r\n\r\n            </div>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Polls;","import axios from 'axios';\nimport { FC, useEffect, useState } from 'react'\nimport Layout from '../../components/layout';\n\n\n\ninterface ILeaderboard {\n    name: string\n    xp: number\n}\n\nconst Leaderboard: FC = () => {\n\n    const [leaderboard, setLeaderboard] = useState<ILeaderboard[]>([]);\n\n\n    // usercontext will allow a check if the username from the server is yours, then highlight yourself\n\n    useEffect(() => {\n        axios.get(\"/api/leaderboard\").then(data => {\n            console.log(data)\n\n            setLeaderboard(data.data);\n        })\n    }, [setLeaderboard])\n\n    return (\n        <>\n            <Layout pageName=\"Leaderboard\">\n                <h1 className=\"mt-5 text-4xl font-bold\">Leaderboard</h1>\n                <small>Climb to the top for some special (possibly monetary 👀) rewards!</small>\n\n                <div className=\"grid grid-cols-3 shadow-lg\">\n                    <div className=\"font-bold border-2 border-r-0 p-1\">User</div>\n                    <div className=\"font-bold border-2 border-r-0 p-1\">Xp</div>\n                    <div className=\"font-bold border-2 border-l-2 p-1\">No. Cards</div>\n\n                    { leaderboard.map(lb => {\n                        return (\n                            <>\n                            <div className=\"p-1 border-l-2\">{ lb.name }</div>\n                            <div className=\"p-1 border-l-2\">{ lb.xp }</div>\n                            <div className=\"p-1 border-l-2 border-r-2\">0</div>\n                            </>\n                        )\n                    })}\n\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nexport default Leaderboard;","import axios from 'axios';\nimport { FC, useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router';\nimport Layout from '../../components/layout';\nimport TradingCard from '../../components/trading_cards';\n\n\n\ninterface IModule {\n    module_name: string\n    module_lecturer: string\n    module_code: string\n    coursework_score: number\n    enjoyability_score: number\n    difficulty_score: number\n    lecture_satisfaction: number\n}\n\nconst Module: FC = () => {\n\n    const [module, setModule] = useState<IModule>()\n\n\n    // usercontext will allow a check if the username from the server is yours, then highlight yourself\n\n    const values = useParams<{id: string}>()\n\n    const hist = useHistory()\n\n    useEffect(() => {\n\n\n\n        axios.get(`/api/module/${values.id}`).then(data =>{\n            console.log(data)\n            setModule(data.data)\n        }).catch(err => {\n            hist.push('/')\n        })\n\n    }, [setModule, values.id, hist])\n\n\n    return (\n        <>\n            <Layout pageName=\"Module\">\n                <h1 className=\"mt-5 text-4xl font-bold\">{ module?.module_name || \"No Name Found\" }</h1>\n                <p>\n                    Lecturer: { module?.module_lecturer || \"No Lecturer Found\"}\n                    <br/>\n                    Code: { module?.module_code || \"No Code Found\"}\n                </p>\n                <br/>\n                <p>Get a higher rarity card by completing more of the modules surveys as they come out!</p>\n\n                <div className=\"mt-5 grid grids-cols-1 md:grid-cols-4 gap-8\">\n                {\n                    [\"common\",\"rare\",\"epic\",\"legendary\"].map(rarity => {\n                        return (\n                            <TradingCard rarity={rarity} name={ module?.module_name || \"\"} imgURL=\"https://pbs.twimg.com/media/C4MRT1NVUAAq0Hr.jpg\" stats={[{name: \"Coursework\", value: module?.coursework_score || 0},\n                                {name: \"Enjoyability\", value: module?.enjoyability_score || 0},{name: \"Difficulty\", value: module?.difficulty_score || 0},{name: \"Lecture\", value: module?.lecture_satisfaction || 0}]}/>\n                        )\n                    })\n                }\n                </div>\n\n            </Layout>\n        </>\n    )\n}\n\nexport default Module;","import axios from 'axios';\nimport { FC, useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport Layout from '../../components/layout';\nimport TradingCard from '../../components/trading_cards';\n\n\n\ninterface ILecture {\n    lecturer_name: string\n    friendliness_score: number\n    speed_of_response: number\n    module_list: IModule[]\n}\n\ninterface IModule {\n    module_id: number\n    module_name: string\n    module_code: string\n}\n\nconst Lecturer: FC = () => {\n\n    const [lecturer, setLecturer] = useState<ILecture>()\n\n\n    // usercontext will allow a check if the username from the server is yours, then highlight yourself\n\n    const values = useParams<{id: string}>()\n\n    const hist = useHistory()\n\n    useEffect(() => {\n\n\n\n        axios.get(`/api/lecturer/${values.id}`).then(data =>{\n            console.log(data)\n            setLecturer(data.data)\n        }).catch(err => {\n            hist.push('/')\n        })\n\n    }, [setLecturer, values.id, hist])\n\n\n    return (\n        <>\n            <Layout pageName=\"Lecturer\">\n                <h1 className=\"mt-5 text-4xl font-bold\">{ lecturer?.lecturer_name|| \"No Name Found\" }</h1>\n                <br/>\n                <p>Get a higher rarity card by completing more of the lecturer surveys as they come out!</p>\n\n                <div className=\"mt-5 grid grids-cols-1 md:grid-cols-4 gap-8\">\n                {\n                    [\"common\",\"rare\",\"epic\",\"legendary\"].map(rarity => {\n                        return (\n                            <TradingCard rarity={rarity} name={ lecturer?.lecturer_name || \"\"} imgURL=\"https://pbs.twimg.com/media/C4MRT1NVUAAq0Hr.jpg\" stats={[{name: \"Friendliness\", value: lecturer?.friendliness_score || 0},\n                                {name: \"Response Time\", value: lecturer?.speed_of_response || 0}]}/>\n                        )\n                    })\n                }\n                </div>\n\n                <div className=\"grid grid-cols-4 mt-4\">\n                    { \n                        lecturer?.module_list.map(module => {\n                            return (\n                                <Link to={`/module/${ module.module_id }`} key={ module.module_id } className=\"group shadow rounded-md h-auto overflow-hidden flex items-center mb-3 hover:bg-gray-200\">\n                                        <p className=\"uppercase border border-gray-200 border-l-0 border-t-0 border-b-0 h-full py-4 px-4 group-hover:border-white\">{ module.module_code }</p>\n                                        <div className=\"py-2 px-4\">\n                                            <p className=\"\">{ module.module_name }</p>\n                                        </div>\n                                    </Link>\n                            )\n                        })    \n                    }\n                </div>\n\n            </Layout>\n        </>\n    )\n}\n\nexport default Lecturer;","import React, { useEffect, useState } from 'react';\nimport { UserProvider } from './context/user';\nimport { IUser, IXp } from './interfaces'\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom'\n;\nimport ProtectedRoute from './components/auth/protectedRoute';\nimport Register from './views/auth/register';\nimport Login from './views/auth/login';\nimport Home from './views/home';\nimport Landing from './views/landing';\nimport Profile from './views/profile';\nimport { XpProvider } from './context/xp';\nimport Polls from './views/polls';\nimport Leaderboard from './views/leaderboard';\nimport axios from 'axios';\nimport Module from './views/module';\nimport Lecturer from './views/lecturer';\n\nfunction App() {\n  \n  const [user, setUser] = useState<IUser>({\n    logged: undefined, // Set to true to fake login.\n    name: \"£500 Loot Box\",\n    id: 500\n  });\n\n  const [xp, setXp] = useState<IXp>({\n    current: 21, max: 145, quantifier: \"xp\", level: 0\n  })\n\n\n  \n\n  useEffect(() => {\n    \n    axios.get(\"/api/ping\").then(data => {\n      setUser({\n        logged: true,\n        name: data.data.name,\n        id: data.data.id\n      })\n\n      setXp({\n        ...xp,\n        current: data.data.xp\n      })\n\n\n\n    }).catch(err => setUser({logged: false}))\n\n  }, [])\n\n  \n  return (\n    <XpProvider value={{ xp, setXp }}>\n      <UserProvider value={{ user, setUser }}>\n        <Router>\n\n\n\n          <Switch>\n\n            <Route exact path=\"/\">\n              {/* Switch landing page to dashboard page based on if they are logged in! */}\n              {\n                user.logged === undefined &&\n                <p>Loading</p>\n              }\n              {\n                user.logged === true &&  (\n                  /* What they see if logged in*/\n                  <Home />\n                ) \n              }\n              { user.logged === false &&\n                (\n                  /* What the see if not logged in */\n                  <Landing />\n                )\n              }\n              \n            </Route>\n\n            {/* Public routes */}\n            <Route path=\"/signin\">\n              <Login />\n            </Route>\n            <Route path=\"/signup\">\n              <Register />\n            </Route>\n            \n            {/* Any routes that need to be protected via a login should look like below */}\n            <ProtectedRoute path=\"/profile\">\n              <Profile />\n            </ProtectedRoute>\n\n            <ProtectedRoute path=\"/poll/:id\">\n              <Polls />\n            </ProtectedRoute>\n\n            <ProtectedRoute path=\"/leaderboard\">\n              <Leaderboard />\n            </ProtectedRoute>\n\n            <ProtectedRoute path=\"/module/:id\">\n              <Module />\n            </ProtectedRoute>\n\n            <ProtectedRoute path=\"/lecturer/:id\">\n              <Lecturer />\n            </ProtectedRoute>\n\n            <Route>\n              <div className=\"w-screen h-screen flex flex-col items-center justify-center\">\n                <h1 className=\"text-7xl mb-2\">Error 404</h1>\n                <p className=\"mb-2\">The page you tried to access doesn't exist</p>\n                <Link to=\"/\" className=\"btn\">Home</Link>\n              </div>\n            </Route>\n          </Switch>\n        </Router>\n      </UserProvider>\n    </XpProvider> \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}